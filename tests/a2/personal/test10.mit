// Mergesort
arr_to_string = fun(arr){
    i = 0;
    result = "[";
    while (i < arr.size){
        result = result + arr[i] + ", ";
        i = i + 1;
    }
    result = result + "]";
    return result;
};
create_arr = fun(size){
    array = {};
    array.size=size;
    while (size > 0){
        size = size - 1;
        array[size] = None;
    }

    array.append = fun(val){
        array[array.size] = val;
        array.size = array.size + 1; 
    };

    array.merge = fun(other){
        new_array = create_arr(0);
        counter_1 = 0;
        counter_2 = 0;
        while (counter_1 < array.size | counter_2 < other.size){
            if (counter_1 >= array.size){
                new_array.append(other[counter_2]);
                counter_2 = counter_2 + 1;
            }else{
                if (counter_2 >= other.size){
                    new_array.append(array[counter_1]);
                    counter_1 = counter_1 + 1;
                }else{
                    if (counter_1 < array.size & counter_2 < other.size){
                        if (array[counter_1] > other[counter_2]){
                            new_array.append(other[counter_2]);
                            counter_2 = counter_2 + 1;
                        }else{
                            new_array.append(array[counter_1]);
                            counter_1 = counter_1 + 1;
                        }
                    }
                }
            }
        }
        return new_array;
    };
    array.splice = fun(start,end){
        new_array = create_arr(0);
        i = start;
        while(i < end){
            new_array.append(array[i]);
            i = i + 1;
        }
        return new_array;
    };
    array.string = fun(){
        return arr_to_string(array);
    };
    return array;
};

mergesort = fun(array){
    if (array.size < 2){
        return array;
    }
    mid = array.size / 2;
    arr1 = mergesort(array.splice(0,mid));
    arr2 = mergesort(array.splice(mid,array.size));
    return arr1.merge(arr2);
};
// Test Case 1: Empty Array
input = create_arr(0);
sorted_array = mergesort(input);
print("Expected Output: []");
print("Actual Output: " + sorted_array.string());

// Test Case 2: Single Element Array
input = create_arr(1);
input[0] = 42;
sorted_array = mergesort(input);
print("Expected Output: [42]");
print("Actual Output: " + sorted_array.string());

// Test Case 3: Already Sorted Array
input = create_arr(5);
input[0] = 1; input[1] = 2; input[2] = 3; input[3] = 4; input[4] = 5;
sorted_array = mergesort(input);
print("Expected Output: [1, 2, 3, 4, 5]");
print("Actual Output: " + sorted_array.string());

// Test Case 4: Reverse Sorted Array
input = create_arr(5);
input[0] = 5; input[1] = 4; input[2] = 3; input[3] = 2; input[4] = 1;
sorted_array = mergesort(input);
print("Expected Output: [1, 2, 3, 4, 5]");
print("Actual Output: " + sorted_array.string());

// Test Case 5: Array with Duplicates
input = create_arr(6);
input[0] = 4; input[1] = 2; input[2] = 4; input[3] = 1; input[4] = 3; input[5] = 2;
sorted_array = mergesort(input);
print("Expected Output: [1, 2, 2, 3, 4, 4]");
print("Actual Output: " + sorted_array.string());

// Test Case 6: Random Unsorted Array
input = create_arr(7);
input[0] = 5; input[1] = 1; input[2] = 8; input[3] = 3; input[4] = 7; input[5] = 2; input[6] = 6;
sorted_array = mergesort(input);
print("Expected Output: [1, 2, 3, 5, 6, 7, 8]");
print("Actual Output: " + sorted_array.string());

// Test Case 7: Array with Negative Numbers
input = create_arr(6);
input[0] = -3; input[1] = 1; input[2] = 4; input[3] = -1; input[4] = 2; input[5] = 0;
sorted_array = mergesort(input);
print("Expected Output: [-3, -1, 0, 1, 2, 4]");
print("Actual Output: " + sorted_array.string());

// Test Case 8: All Elements the Same
input = create_arr(5);
input[0] = 2; input[1] = 2; input[2] = 2; input[3] = 2; input[4] = 2;
sorted_array = mergesort(input);
print("Expected Output: [2, 2, 2, 2, 2]");
print("Actual Output: " + sorted_array.string());

// Test Case 9: Splice Function Test
input = create_arr(5);
input[0] = 1; input[1] = 2; input[2] = 3; input[3] = 4; input[4] = 5;
spliced_array = input.splice(1, 4);
print("Expected Output: [2, 3, 4]");
print("Actual Output: " + spliced_array.string());

// Test Case 10: Merge Function Test
array1 = create_arr(3);
array1[0] = 1; array1[1] = 3; array1[2] = 5;
array2 = create_arr(3);
array2[0] = 2; array2[1] = 4; array2[2] = 6;
merged_array = array1.merge(array2);
print("Expected Output: [1, 2, 3, 4, 5, 6]");
print("Actual Output: " + merged_array.string());

// Test Case 11: Merging Unequal Length Arrays
array1 = create_arr(3);
array1[0] = 1; array1[1] = 4; array1[2] = 6;
array2 = create_arr(2);
array2[0] = 2; array2[1] = 5;
merged_array = array1.merge(array2);
print("Expected Output: [1, 2, 4, 5, 6]");
print("Actual Output: " + merged_array.string());

