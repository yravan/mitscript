function
{
	functions =
	[
		function
		{
			functions = [],
			constants = [None],
			parameter_count = 1,
			local_vars = [],
			local_ref_vars = [],
			free_vars = [],
			names = [],
			instructions =
			[
			]
		},
		function
		{
			functions = [],
			constants = [None],
			parameter_count = 0,
			local_vars = [],
			local_ref_vars = [],
			free_vars = [],
			names = [],
			instructions =
			[
			]
		},
		function
		{
			functions = [],
			constants = [None],
			parameter_count = 1,
			local_vars = [],
			local_ref_vars = [],
			free_vars = [],
			names = [],
			instructions =
			[
			]
		},
		function
		{
			functions =
			[
				function
				{
					functions = [],
					constants = [None, "(", ")"],
					parameter_count = 0,
					local_vars = [],
					local_ref_vars = [],
					free_vars = [x, y],
					names = [print],
					instructions =
					[
						load_global	0
						push_ref	0
						load_ref
						call	1
						pop
						load_global	0
						load_const	1
						push_ref	0
						load_ref
						add
						push_ref	1
						load_ref
						add
						load_const	2
						add
						call	1
						pop
						load_const	0
						return
					]
				}
			],
			constants = [None],
			parameter_count = 2,
			local_vars = [x, y, this],
			local_ref_vars = [x, y, this],
			free_vars = [],
			names = [print],
			instructions =
			[
				alloc_record
				dup
				load_func	0
				push_ref	0
				push_ref	1
				alloc_closure	2
				field_store	0
				store_local	2
				load_local	2
				return
			]
		}
	],
	constants = [None, 2, 2, "dummy", 1],
	parameter_count = 0,
	local_vars = [],
	local_ref_vars = [],
	free_vars = [],
	names = [print, input, intcast, Vector, v1, z],
	instructions =
	[
		load_func	0
		alloc_closure	0
		store_global	0
		load_func	1
		alloc_closure	0
		store_global	1
		load_func	2
		alloc_closure	0
		store_global	2
		load_func	3
		alloc_closure	0
		store_global	3
		load_global	3
		load_const	1
		load_const	2
		call	2
		store_global	4
		load_global	0
		load_const	3
		call	1
		pop
		load_const	4
		store_global	5
	]
}
